name: AI Impact Full Pipeline

on:
  workflow_dispatch:
  # pull_request:
  #   types: [opened, synchronize]

permissions:
  contents: write
  issues: write
  pull-requests: write
  repository-projects: write

jobs:
  generate_tests:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate with Keycloak
        id: keycloak_auth
        shell: powershell
        run: |
          $authUrl = "http://auth.gftaiimpact.local/realms/ai-impact/protocol/openid-connect/token"
          $headers = @{ "Content-Type" = "application/x-www-form-urlencoded" }
          $body = @{
              client_id  = "ai-impact-client"
              username   = "administrator"
              password   = "Gft@2025"
              scope      = "openid"
              grant_type = "password"
          }

          $response = Invoke-RestMethod -Uri $authUrl -Method Post -Headers $headers -Body $body
          $ACCESS_TOKEN = $response.access_token

          if (-not $ACCESS_TOKEN -or $ACCESS_TOKEN -eq "null") {
              Write-Host "Failed to obtain access token"
              Write-Host ($response | ConvertTo-Json -Depth 10)
              exit 1
          }

          "access_token=$ACCESS_TOKEN" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Checkout the branch
        shell: powershell
        run: |
          $branchName = "${{ github.event.pull_request.head.ref }}"
          git fetch origin $branchName
          git checkout $branchName

      - name: Create Classes List
        id: changes
        shell: powershell
        run: |
          $javaFiles = Get-ChildItem -Path "src/main/java/com/scalesec/vulnado" -Recurse -Filter "*.java" | ForEach-Object { $_.FullName }
          $javaFilesString = $javaFiles -join "`n"

          Write-Host "Java files found:`n$javaFilesString"

          Add-Content -Path $env:GITHUB_ENV -Value "java_files<<EOF`n$javaFilesString`nEOF"

      - name: Prepare and Send to API (TestCreator)
        id: send_api
        shell: powershell
        run: |
          $filesArray = @()

          foreach ($file in (Get-Content "$env:GITHUB_ENV" | Select-String "java_files" -Context 0,1).Context.PostContext) {
              $className = [System.IO.Path]::GetFileNameWithoutExtension($file)
              $testFile = "src/test/java/com/scalesec/vulnado/${className}Tests.java"

              $filesArray += "--form files=@$file"

              if (Test-Path $testFile) {
                  $filesArray += "--form ExistingTests=@$testFile"
              }
          }

          $response = Invoke-RestMethod -Uri "http://api.gftaiimpact.local/ai/test" -Method Post -Headers @{ "Authorization" = "Bearer $env:access_token" } -Body @{
              RunName             = "GenerateTests"
              jobName             = "DemoTestCreator"
              SearchPattern       = "*.java"
              TargetExtension     = "java"
              PromptId            = "TestCreator__CreateUnitTests_V1"
              SourceCodeLanguage  = "Java"
              TestType            = "Unit"
              TestingFrameworks   = "MSTEST,MOQ"
              Llm                = "${{ vars.LLM }}"
              AdditionalInstructions = "Generate only the source code, without any extra information"
          }

          Write-Host "API Response: $response"

          $jobId = $response.jobId
          Add-Content -Path $env:GITHUB_ENV -Value "job_id=$jobId"

      - name: Monitor Job Status
        id: monitor_status
        shell: powershell
        run: |
          $jobId = "${{ env.job_id }}"
          $jobId = "${{ steps.send_api.outputs.job_id }}"  # Get jobId from previous step output
          $status = "Pending"

          while ($status -ne "Completed") {
              $response = Invoke-RestMethod -Uri "http://api.gftaiimpact.local/ai/jobs/$jobId/status" -Method Get -Headers @{ "Authorization" = "Bearer $env:access_token" }
              $status = $response.status
              Write-Host "Current status: $status"
              Start-Sleep -Seconds 10
          }

          Write-Host "Final status: $status"

      - name: Save Generated Tests
        shell: powershell
        run: |
          $outputUris = "${{ env.output_uris }}" -split "`n"

          foreach ($uri in $outputUris) {
              $fileUrl = "http://api.gftaiimpact.local$uri"
              $fileContent = Invoke-RestMethod -Uri $fileUrl -Headers @{ "Authorization" = "Bearer $env:access_token" }

              $className = [System.IO.Path]::GetFileNameWithoutExtension($uri)
              $testFile = "src/test/java/com/scalesec/vulnado/${className}Tests.java"

              $directory = [System.IO.Path]::GetDirectoryName($testFile)
              if (!(Test-Path $directory)) {
                  New-Item -ItemType Directory -Path $directory -Force
              }

              $fileContent | Out-File -FilePath $testFile
          }

      - name: Commit and Push Generated Files
        shell: powershell
        run: |
          git config --global user.name 'gft-ai-impact[bot]'
          git config --global user.email 'ai-impact[bot]@gft.com'
          git add .
          git commit -m "Add generated Documentations and Unit Tests"
          git push --set-upstream origin "${{ github.event.pull_request.head.ref }}"

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "AI Impact documentation and Unit Tests"
          title: "Documentation and Unit Tests created by AI Impact"
          body: "Pull request created by AI Impact CodeDocumenter and CodeTester."
          branch: "tester-by-ai"
          delete-branch: true
          add-paths: |
              ./**/*.java
              ./**/*.md
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: "auto-generated, tests"
          draft: false